# Generated by Django 2.2.3 on 2019-07-04 14:37

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Um nome curto que será usado para identificá-lo de forma única na plataforma', max_length=30, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'Informe um nome de usuário válido. Este valor deve conter apenas letras, números e os caracteres: @/./+/-/_ .', 'invalid')], verbose_name='Username')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail Address')),
                ('cpf', models.CharField(max_length=14, unique=True, verbose_name='CPF')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Team')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('type', models.CharField(blank=True, choices=[('Candidato', 'Candidato'), ('Gestor', 'Gestor')], max_length=10, verbose_name='Type')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CurriculoModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('cpf', models.CharField(max_length=14, unique=True, verbose_name='CPF')),
                ('cel', models.CharField(max_length=14, verbose_name='Celular')),
                ('birth', models.DateTimeField(verbose_name='Nascimento')),
                ('genre', models.CharField(blank=True, choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Outro', 'Outro')], max_length=10, verbose_name='Gênero')),
                ('address', models.CharField(max_length=255, verbose_name='Endereço')),
                ('complement', models.CharField(max_length=255, verbose_name='Complemento')),
                ('city', models.CharField(max_length=50, verbose_name='Cidade')),
                ('state', models.CharField(choices=[('GO', 'GO'), ('TO', 'TO'), ('PA', 'PA'), ('DF', 'DF'), ('MS', 'MS')], max_length=2, verbose_name='Estado')),
                ('cep', models.CharField(max_length=8, verbose_name='Gênero')),
                ('dt_create', models.DateTimeField(auto_now_add=True, verbose_name='Criado em:')),
                ('dt_update', models.DateTimeField(auto_now=True, verbose_name='Atualizado em:')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Currículo',
                'ordering': ['name'],
                'verbose_name_plural': 'Currículos',
            },
        ),
    ]
